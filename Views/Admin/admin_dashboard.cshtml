@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_Layout";
}

<head>
    <!-- Boxicons -->
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <!-- My CSS -->
    <link rel="stylesheet" href="~/css/admin_dashboard.css" asp-append-version="true">  
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<!-- SIDEBAR -->
<section id="sidebar">
    <a class="brand" style="text-decoration: none;">
        <i class='bx bxs-smile'></i>
        <span class="text">Admin</span>
    </a>
    <ul class="side-menu top">
        <li class="active">
            <a asp-area="" asp-controller="Admin" asp-action="Dashboard">
                <i class='bx bxs-dashboard'></i>
                <span class="text">Dashboard</span>
            </a>
        </li>
        <li>
            <a asp-area="" asp-controller="Admin" asp-action="Profile">
                <i class='bx bxs-user'></i>
                <span class="text">Profile</span>
            </a>
        </li>
        <li>
            <a>
                <i class='bx bxs-megaphone'></i>
                <span class="text">Announcement</span>
            </a>
        </li>
        <li>
            <a asp-area="" asp-controller="Admin" asp-action="AdminBilling">
                <i class='bx bxs-credit-card-front'></i>
                <span class="text">Payment and Billing</span>
            </a>
        </li>
        <li>
            <a asp-area="" asp-controller="Admin" asp-action="Services">
                <i class='bx bxs-briefcase'></i>
                <span class="text">Services</span>
            </a>
        </li>
         <li>
            <a asp-area="" asp-controller="Admin" asp-action="AdminFacilityReservation">
                <i class='bx bxs-calendar'></i>
                <span class="text">Facility Reservation</span>
            </a>
        </li>
        <li >
            <a asp-area="" asp-controller="Admin" asp-action="SecurityVisitors">
                <i class='bx bxs-shield-alt-2'></i>
                <span class="text">Security and Visitors</span>
            </a>
        </li>
        <li>
            <a asp-area="" asp-controller="Admin" asp-action="ContactAndSupport">
                <i class='bx bxs-shield-alt-2'></i>
                <span class="text">Contact and Support</span>
            </a>
        </li>
    </ul>
    <ul class="side-menu">
        <li>
            <a asp-action="logout" class="logout">
                <i class='bx bxs-log-out-circle'></i>
                <span class="text">Logout</span>
            </a>
        </li>
    </ul>
</section>

<!-- CONTENT -->
<section id="content">
    <!-- NAVBAR -->
    <nav>
        <i class='bx bx-menu'></i>
        <form action="#">
            <div class="form-input">
                <input type="search" placeholder="Search...">
                <button type="submit" class="search-btn"><i class='bx bx-search'></i></button>
            </div>
        </form>
        <input type="checkbox" id="switch-mode" hidden>
        <label for="switch-mode" class="switch-mode"></label>
        <div class="profile">
            <span>@ViewBag.AdminName<br>Aleki</span>
            <img src="~/images/house.jpg" alt="Profile" class="profile-pic">
        </div>
    </nav>

    <div class="container">
        <main>
            <div class="dashboard-header">
                <h1>Welcome Back, @ViewBag.AdminName!</h1>
                <button class="btn btn-add-employee" data-bs-toggle="modal" data-bs-target="#addEmployeeModal" style>
                    <i class='bx bxs-user-plus'></i> Add Employee
                </button>
            </div>

            <div class="stats-container">
                <div class="stat-card">
                    <div class="stat-icon home">
                        <i class='bx bxs-home'></i>
                    </div>
                    <div class="stat-info">
                        <h3>Total Houses</h3>
                        <p class="stat-number">@ViewBag.TotalHouses</p>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon visitors">
                        <i class='bx bxs-user-detail'></i>
                    </div>
                    <div class="stat-info">
                        <h3>Total Residence</h3>
                        <p class="stat-number">@ViewBag.TotalResidents</p>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon facility">
                        <i class='bx bxs-wallet'></i>
                    </div>
                    <div class="stat-info">
                        <h3>Total Income</h3>
                        <p class="stat-number">â‚±@ViewBag.TotalIncome.ToString("N2")</p>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon employees">
                        <i class='bx bxs-user-voice'></i>
                    </div>
                    <div class="stat-info">
                        <h3>Total Employees</h3>
                        <p class="stat-number" id="totalEmployees">@ViewBag.TotalEmployees</p>
                    </div>
                </div>
            </div>

            <div class="chart-container">
                <div class="chart-card">
                    <h3>Homeowner Registration Logs</h3>
                    <div style="overflow:hidden; border-radius:10px; box-shadow: 0 2px 8px rgba(60,145,230,0.08); height:100%; max-height:320px; overflow-y:auto;">
                        <table id="homeownerLogsTable" class="table table-striped" style="width:100%;">
                            <thead style="background: linear-gradient(90deg, #3C91E6 0%, #1cc88a 100%); color: #fff;">
                                <tr>
                                    <th>Month</th>
                                    <th>Approved</th>
                                    <th>Disapproved</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- JS will populate rows here -->
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="chart-card">
                    <h3>House Registrations</h3>
                    <canvas id="housesChart"></canvas>
                </div>
            </div>
        </main>
    </div>
</section>

<!-- Staff Registration Modal -->
<div class="modal fade" id="addEmployeeModal" tabindex="-1" aria-labelledby="addEmployeeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEmployeeModalLabel">
                    <i class='bx bxs-user-plus'></i> Register Staff
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="employeeForm">
                    <div class="mb-3">
                        <label class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="employeeName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Position</label>
                        <input type="text" class="form-control" id="employeePosition" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Department</label>
                        <input type="text" class="form-control" id="employeeDepartment" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date Hired</label>
                        <input type="date" class="form-control" id="employeeDateHired" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="employeeEmail" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Contact Number</label>
                        <input type="text" class="form-control" id="employeeContact" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" class="form-control" id="employeeUsername" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Temporary Password</label>
                        <input type="password" class="form-control" id="employeePassword" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirm Password</label>
                        <input type="password" class="form-control" id="employeeConfirmPassword" required>
                    </div>
                    <button type="submit" class="btn btn-success w-100">Register</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#employeeForm').submit(function (e) {
            e.preventDefault();

            let name = $('#employeeName').val();
            let position = $('#employeePosition').val();
            let email = $('#employeeEmail').val();
            let contact = $('#employeeContact').val();
            let password = $('#employeePassword').val();
            let confirmPassword = $('#employeeConfirmPassword').val();
            let username = $('#employeeUsername').val();
            let dateHired = $('#employeeDateHired').val();
            let department = $('#employeeDepartment').val();

            if (password !== confirmPassword) {
                alert("Passwords do not match!");
                return;
            }

            $.ajax({
                url: '/Admin/RegisterStaff',
                type: 'POST',
                contentType: "application/json",
                data: JSON.stringify({
                    fullName: name,
                    position: position,
                    email: email,
                    contactNumber: contact,
                    passwordHash: password,
                    username: username,
                    date_Hired: dateHired,
                    department: department
                }),
                success: function(response) {
                    alert(response.message);
                    let totalEmployees = parseInt($('#totalEmployees').text());
                    $('#totalEmployees').text(totalEmployees + 1);
                    $('#addEmployeeModal').modal('hide');
                    $('#employeeForm')[0].reset();
                },
                error: function(xhr, status, error) {
                    alert("An error occurred: " + error);
                }
            });
        });

        // Dark mode toggle
        const switchMode = document.getElementById('switch-mode');
        switchMode.addEventListener('change', function () {
            document.body.classList.toggle('dark');
        });

        // Sidebar toggle
        const menuBar = document.querySelector('nav .bx.bx-menu');
        const sidebar = document.getElementById('sidebar');

        menuBar.addEventListener('click', function () {
            sidebar.classList.toggle('hide');
        });

        // Houses Chart
        const housesCtx = document.getElementById('housesChart').getContext('2d');
        const housesData = @Html.Raw(Json.Serialize(ViewBag.HouseDistribution));
        const housesLabels = housesData.map(item => `Block ${item.block}`);
        const housesValues = housesData.map(item => item.count);

        new Chart(housesCtx, {
            type: 'bar',
            data: {
                labels: housesLabels,
                datasets: [{
                    label: 'Houses per Block',
                    data: housesValues,
                    backgroundColor: '#1cc88a',
                    borderRadius: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    title: {
                        display: true,
                        text: 'House Distribution by Block',
                        font: {
                            size: 16,
                            weight: 'bold'
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        },
                        title: {
                            display: true,
                            text: 'Number of Houses'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Block'
                        }
                    }
                }
            }
        });

        // Render Homeowner Registration Logs Table dynamically from server
        function renderHomeownerLogsTable() {
            fetch('/Admin/GetHomeownerLogs')
                .then(response => response.json())
                .then(data => {
                    const tbody = document.querySelector('#homeownerLogsTable tbody');
                    if (!tbody) return;

                    // Group logs by month
                    const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
                    const stats = {};
                    months.forEach(m => stats[m] = { Approved: 0, Disapproved: 0 });

                    data.forEach(log => {
                        const date = new Date(log.date);
                        const month = months[date.getMonth()];
                        if (stats[month]) {
                            stats[month][log.status] = (stats[month][log.status] || 0) + 1;
                        }
                    });

                    // Build table rows
                    tbody.innerHTML = months.map(m => `
                        <tr>
                            <td>${m}</td>
                            <td style="color:#155724; background:#d4edda; font-weight:bold;">${stats[m].Approved}</td>
                            <td style="color:#721c24; background:#f8d7da; font-weight:bold;">${stats[m].Disapproved}</td>
                        </tr>
                    `).join('');
                })
                .catch(error => console.error('Error fetching homeowner logs:', error));
        }

        // Initial render
        document.addEventListener('DOMContentLoaded', renderHomeownerLogsTable);

        // Refresh logs every 30 seconds
        setInterval(renderHomeownerLogsTable, 30000);
    });
</script>
