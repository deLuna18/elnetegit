@{
    ViewData["Title"] = "Dashboard";
}
@model IEnumerable<SubdivisionManagement.Model.Announcement>
<head>
	<!-- Boxicons -->
	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<!-- My CSS -->
	<link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true">
</head>
<style>
	/* ANNOUNCEMENT CARD */
.announcement-card {
    position: relative;
    height: 200px;
    background-size: cover;
    background-position: center;
    border-radius: 10px;
    overflow: hidden;
    margin-bottom: 20px;
    width: 100%;
}

.announcement-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
}

.announcement-content {
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 20px;
    color: white;
    max-width: 100%;
}

.announcement-content h4 {
    font-size: 1.5rem;
    margin-bottom: 10px;
    font-weight: 600;
    word-wrap: break-word;
    max-width: 100%;
}

.announcement-content p {
    font-size: 1rem;
    margin-bottom: 15px;
    line-height: 1.4;
    word-wrap: break-word;
    max-width: 100%;
}

.announcement-footer {
    display: flex;
    justify-content: space-between;
    width: 100%;
    font-size: 0.9rem;
    margin-top: auto;
    padding: 0 10px;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
}

.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 50%;
    border-radius: 10px;
    position: relative;
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover {
    color: black;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
}

.form-group input,
.form-group textarea {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.btn-primary {
    background-color: var(--blue);
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.btn-primary:hover {
    opacity: 0.9;
}

.todo-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    margin-bottom: 10px;
    background: var(--grey);
    border-radius: 10px;
    border-left: 10px solid var(--orange);
}

.todo-item.completed {
    border-left-color: var(--blue);
}

.todo-content {
    display: flex;
    align-items: center;
    gap: 10px;
}

.todo-checkbox {
    width: 20px;
    height: 20px;
}

.todo-title {
    font-weight: 500;
}

.todo-description {
    font-size: 0.9em;
    color: #666;
}

.todo-actions {
    display: flex;
    gap: 10px;
}

.todo-action-btn {
    background: none;
    border: none;
    cursor: pointer;
    color: #666;
}

.todo-action-btn:hover {
    color: var(--blue);
}
</style>

<title>Dashboard</title>
<body>


	<!-- SIDEBAR -->
	<section id="sidebar">
		<a href="#" class="brand">
			<i class='bx bxs-smile'></i>
			<span class="text">Welcome</span>
		</a>
		<ul class="side-menu top">
			<li class="active">
				<a asp-area="" asp-controller="Home" asp-action="dashboard">
					<i class='bx bxs-dashboard'></i>
					<span class="text">Dashboard</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="profile">
					<i class='bx bxs-user'></i>
					<span class="text">Profile</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="Announcements">
					<i class='bx bxs-megaphone'></i>
					<span class="text">Announcement</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="billing">
					<i class='bx bxs-credit-card-front'></i>
					<span class="text">Payment and Billing</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="facility_reservation">
					<i class='bx bxs-credit-card-front'></i>
					<span class="text">Facility Reservation</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="Services">
                    <i class='bx bxs-briefcase'></i>
                    <span class="text">Services</span>
                </a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="Community_forum">
                    <i class='bx bxs-message-square-dots'></i>
                    <span class="text">Community Forum</span>
                </a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="security_visitors">
					<i class='bx bxs-shield-alt-2'></i>
					<span class="text">Security and Visitors</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="contact">
					<i class='bx bx-support'></i>
					<span class="text">Contact and Support</span>
				</a>
			</li>
		</ul>
		<ul class="side-menu">
			<li>
				<a href="#">
					<i class='bx bxs-cog'></i>
					<span class="text">Settings</span>
				</a>
			</li>
			<li>
				<a asp-action="logout" class="logout">
					<i class='bx bxs-log-out-circle'></i>
					<span class="text">Logout</span>
				</a>
			</li>
		</ul>
	</section>
	<!-- SIDEBAR -->
	<!-- CONTENT -->
	<section id="content">
		<!-- NAVBAR -->
		<nav>
			<form>
				<div class="form-input">
					<input type="search" placeholder="Search...">
					<button type="submit" class="search-btn"><i class='bx bx-search'></i></button>
				</div>
			</form>
			<input type="checkbox" id="switch-mode" hidden>
			<label for="switch-mode" class="switch-mode"></label>
			<a href="#" class="notification">
				<i class='bx bxs-bell'></i>
				<span class="num">8</span>
			</a>
			<a asp-area="" asp-controller="Home" asp-action="profile">
				<img src="~/images/profile.jpg" style="border-radius: 50%; width: 36px; height: 36px; object-fit: cover;">
			</a>
		</nav>
		<!-- NAVBAR -->
		<!-- MAIN -->
		<main>
			<div class="head-title">
				<div class="left">
					<h1>Dashboard</h1>
				</div>
				<a href="#" class="btn-download">
					<i class='bx bxs-file-blank'></i>
					<span class="text">File Manager</span>
				</a>
			</div>

			<ul class="box-info">
				<li>
					<i class='bx bxs-message-square-dots'></i>
					<span class="text">
						<h3>@ViewBag.TotalUsers</h3>
						<button id="activeNowBtn">Active Homeowners</button>
					</span>
				</li>
				<li>
					<i class='bx bxs-group'></i>
					<span class="text">
						<h3>10</h3>
						<button id="visitorBtn">Visitor</button>
					</span>
				</li>
				<li>
					<i class='bx bxs-dollar-circle'></i>
					<span class="text">
						<h3>$2543</h3>
						<p>Bills and Payments</p> 	<!-- BUTTON FOR BILLS AND PAGE -->
					</span>
				</li>
			</ul>


			<div class="table-data">
				<div class="order">
					<div class="head">
						<h3>Announcements</h3>
						<i class='bx bx-search'></i>
						<i class='bx bx-filter'></i>
					</div>
					<table>
						<tbody>
							@foreach (var announcement in Model)
							{
								<tr>
									<td>
										<div class="announcement-card" style="background-image: url('@announcement.ImagePath');">
											<div class="announcement-content">
												<h4>@announcement.Type</h4>
												<p>@announcement.Description</p>
												<div class="announcement-footer">
													<span>@announcement.Staff.FullName</span>
													<span>@announcement.DateCreated.ToString("MMM dd, yyyy")</span>
												</div>
											</div>
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
				<div class="todo">
					<div class="head">
						<h3>My Todo List</h3>
						<button class="add-todo-btn" onclick="openAddTodoModal()">
							<i class='bx bx-plus' style="border: none;"></i>
						</button>
					</div>
					<div class="todo-list" id="todoList">
						<!-- Todo items will be loaded here -->
					</div>
				</div>
			</div>
		</main>
		<!-- MAIN -->
	</section>

	<!-- MESSENGER MODAL -->
	<div id="messengerModal" class="messenger-modal">
		<div class="messenger-header">
			<span>Messenger</span>
			<span class="close-btn" onclick="closeMessenger()">&times;</span>
		</div>
		<div class="messenger-body">
			<div id="recentChats" class="recent-chats">
				<div class="chat-item" onclick="openChat('User 1')">
					<img src="~/images/best friend.jpg" alt="User 1">
					<span>Shekainah Gaceta</span>
				</div>
				<div class="chat-item" onclick="openChat('User 2')">
					<img src="~/images/aleki.jpg" alt="User 2">
					<span>Maria Alexa de Luna</span>
				</div>
				<div class="chat-item" onclick="openChat('User 3')">
					<img src="~/images/eyan.jpg" alt="User 3">
					<span>Marianne Mae Calderon</span>
				</div>
				<div class="chat-item" onclick="openChat('User 4')">
					<img src="~/images/sidoy.jpg" alt="User 4">
					<span>Cedric Cornelio</span>
				</div>
			</div>
			<div id="chatBox" class="chat-box">
				<div class="chat-messages" id="chatMessages">
					<p>Select a conversation to start chatting.</p>
				</div>
				<div class="chat-footer">
					<input type="text" id="chatInput" placeholder="Type a message...">
					<button onclick="sendMessage()">Send</button>
				</div>
			</div>
		</div>
	</div>



	<!-- VISITOR MODAL -->

	<div id="visitorModal" class="visitor-modal">
		<span class="close-btn" onclick="closeVisitorModal()">&times;</span>
		<div class="visitor-header">Visitor Log</div>
		<table class="visitor-table">
			<thead>
				<tr>
					<th>Visitor Name</th>
					<th>Time-in</th>
					<th>Time-out</th>
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>Jang Wonyoung</td>
					<td>10:00 AM</td>
					<td>11:30 AM</td>
				</tr>
			</tbody>
		</table>
	</div>

	<!-- Add Todo Modal -->
	<div id="addTodoModal" class="modal">
		<div class="modal-content">
			<span class="close" onclick="closeModal('addTodoModal')">&times;</span>
			<h2>Add New Todo</h2>
			<form id="addTodoForm">
				@Html.AntiForgeryToken()
				<div class="form-group">
					<label for="todoTitle">Title</label>
					<input type="text" id="todoTitle" name="title" required>
				</div>
				<div class="form-group">
					<label for="todoDescription">Description (Optional)</label>
					<textarea id="todoDescription" name="description"></textarea>
				</div>
				<button type="submit" class="btn-primary">Add Todo</button>
			</form>
		</div>
	</div>

	<script>
	document.addEventListener('DOMContentLoaded', function() {
		// Initialize todo functionality
		initializeTodoFunctionality();
		
		// Initialize sidebar functionality
		initializeSidebarFunctionality();
		
		// Initialize search functionality
		initializeSearchFunctionality();

		// Initialize messenger functionality
		initializeMessengerFunctionality();

		// Initialize visitor functionality
		initializeVisitorFunctionality();
	});

	function initializeTodoFunctionality() {
		// Load existing todos
		loadTodos();

		// Add todo form handling
		const addTodoForm = document.getElementById('addTodoForm');
		if (addTodoForm) {
			addTodoForm.addEventListener('submit', function(e) {
				e.preventDefault();
				const title = document.getElementById('todoTitle').value;
				const description = document.getElementById('todoDescription').value;

				console.log('Submitting todo:', { title, description });

				fetch('/Home/AddTodo', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
						'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
					},
					body: JSON.stringify({ title, description })
				})
				.then(response => {
					console.log('Response status:', response.status);
					return response.json();
				})
				.then(data => {
					console.log('Response data:', data);
					if (data.success) {
						closeModal('addTodoModal');
						loadTodos();
						addTodoForm.reset();
					} else {
						alert('Failed to add todo: ' + (data.message || 'Unknown error'));
					}
				})
				.catch(error => {
					console.error('Error adding todo:', error);
					alert('Error adding todo: ' + error.message);
				});
			});
		}
	}

	function initializeSidebarFunctionality() {
		const allSideMenu = document.querySelectorAll('#sidebar .side-menu.top li a');
		allSideMenu.forEach(item => {
			const li = item.parentElement;
			item.addEventListener('click', function () {
				allSideMenu.forEach(i => {
					i.parentElement.classList.remove('active');
				})
				li.classList.add('active');
			})
		});

		// TOGGLE SIDEBAR
		const menuBar = document.querySelector('#content nav .bx.bx-menu');
		const sidebar = document.getElementById('sidebar');

		if (menuBar) {
			menuBar.addEventListener('click', function () {
				sidebar.classList.toggle('hide');
			});
		}

		if(window.innerWidth < 768) {
			sidebar.classList.add('hide');
		}
	}

	function initializeSearchFunctionality() {
		const searchButton = document.querySelector('#content nav form .form-input button');
		const searchButtonIcon = document.querySelector('#content nav form .form-input button .bx');
		const searchForm = document.querySelector('#content nav form');

		if (searchButton) {
			searchButton.addEventListener('click', function (e) {
				if(window.innerWidth < 576) {
					e.preventDefault();
					searchForm.classList.toggle('show');
					if(searchForm.classList.contains('show')) {
						searchButtonIcon.classList.replace('bx-search', 'bx-x');
					} else {
						searchButtonIcon.classList.replace('bx-x', 'bx-search');
					}
				}
			});
		}
	}

	function handleTodoSubmit(e) {
		e.preventDefault();
		const title = document.getElementById('todoTitle').value;
		const description = document.getElementById('todoDescription').value;

		console.log('Submitting todo:', { title, description });

		fetch('/Home/AddTodo', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
			},
			body: JSON.stringify({ title, description })
		})
		.then(response => {
			console.log('Response status:', response.status);
			return response.json();
		})
		.then(data => {
			console.log('Response data:', data);
			if (data.success) {
				closeModal('addTodoModal');
				loadTodos();
				document.getElementById('addTodoForm').reset();
			} else {
				alert('Failed to add todo: ' + (data.message || 'Unknown error'));
			}
		})
		.catch(error => {
			console.error('Error adding todo:', error);
			alert('Error adding todo: ' + error.message);
		});
	}

	function openAddTodoModal() {
		const modal = document.getElementById('addTodoModal');
		if (modal) {
			modal.style.display = 'block';
		}
	}

	function closeModal(modalId) {
		const modal = document.getElementById(modalId);
		if (modal) {
			modal.style.display = 'none';
		}
	}

	function loadTodos() {
		console.log('Loading todos...');
		fetch('/Home/GetTodos')
			.then(response => {
				console.log('GetTodos response status:', response.status);
				if (response.status === 401) {
					// Redirect to login page if unauthorized
					window.location.href = '/Home/Index';
					return;
				}
				return response.json();
			})
			.then(data => {
				if (!data) return; // Skip if we redirected
				console.log('GetTodos response data:', data);
				if (data.success) {
					const todoList = document.getElementById('todoList');
					if (todoList) {
						todoList.innerHTML = '';
						if (data.todos && data.todos.length > 0) {
							data.todos.forEach(todo => {
								const todoItem = createTodoElement(todo);
								todoList.appendChild(todoItem);
							});
						} else {
							todoList.innerHTML = '<div class="no-todos">No todos yet. Add one using the + button above!</div>';
						}
					}
				} else {
					console.error('Failed to load todos:', data.message);
				}
			})
			.catch(error => {
				console.error('Error loading todos:', error);
				const todoList = document.getElementById('todoList');
				if (todoList) {
					todoList.innerHTML = '<div class="error">Error loading todos. Please try again.</div>';
				}
			});
	}

	function createTodoElement(todo) {
		const div = document.createElement('div');
		div.className = `todo-item ${todo.isCompleted ? 'completed' : ''}`;
		div.innerHTML = `
			<div class="todo-content">
				<input type="checkbox" class="todo-checkbox" 
					   ${todo.isCompleted ? 'checked' : ''} 
					   onchange="updateTodoStatus(${todo.id}, this.checked)">
				<div>
					<div class="todo-title">${todo.title}</div>
					${todo.description ? `<div class="todo-description">${todo.description}</div>` : ''}
				</div>
			</div>
			<div class="todo-actions">
				<button class="todo-action-btn" onclick="deleteTodo(${todo.id})">
					<i class='bx bx-trash'></i>
				</button>
			</div>
		`;
		return div;
	}

	function updateTodoStatus(todoId, isCompleted) {
		fetch('/Home/UpdateTodoStatus', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
			},
			body: JSON.stringify({ todoId, isCompleted })
		})
		.then(response => response.json())
		.then(data => {
			if (data.success) {
				loadTodos();
			} else {
				alert('Failed to update todo status: ' + (data.message || 'Unknown error'));
			}
		})
		.catch(error => {
			console.error('Error updating todo status:', error);
			alert('Error updating todo status: ' + error.message);
		});
	}

	function deleteTodo(todoId) {
		if (!confirm('Are you sure you want to delete this todo?')) {
			return;
		}

		fetch('/Home/DeleteTodo', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
			},
			body: JSON.stringify({ todoId })
		})
		.then(response => response.json())
		.then(data => {
			if (data.success) {
				loadTodos();
			} else {
				alert('Failed to delete todo: ' + (data.message || 'Unknown error'));
			}
		})
		.catch(error => {
			console.error('Error deleting todo:', error);
			alert('Error deleting todo: ' + error.message);
		});
	}

	function initializeMessengerFunctionality() {
		const activeNowBtn = document.getElementById("activeNowBtn");
		if (activeNowBtn) {
			activeNowBtn.addEventListener("click", function() {
				const messengerModal = document.getElementById("messengerModal");
				if (messengerModal) {
					messengerModal.style.display = "flex";
				}
			});
		}
	}

	function initializeVisitorFunctionality() {
		const visitorBtn = document.getElementById("visitorBtn");
		if (visitorBtn) {
			visitorBtn.addEventListener("click", function() {
				const visitorModal = document.getElementById("visitorModal");
				if (visitorModal) {
					visitorModal.style.display = "block";
				}
			});
		}
	}

	function closeMessenger() {
		const messengerModal = document.getElementById("messengerModal");
		if (messengerModal) {
			messengerModal.style.display = "none";
		}
	}

	function openChat(user) {
		const recentChats = document.getElementById("recentChats");
		const chatBox = document.getElementById("chatBox");
		const chatMessages = document.getElementById("chatMessages");
		
		if (recentChats && chatBox && chatMessages) {
			recentChats.style.display = "none";
			chatBox.style.display = "flex";
			chatMessages.innerHTML = `<p>Chat with ${user}</p>`; /*need nako ang db */
		}
	}

	function sendMessage() {
		const chatInput = document.getElementById("chatInput");
		const chatMessages = document.getElementById("chatMessages");
		
		if (chatInput && chatMessages) {
			let message = chatInput.value;
			if (message.trim() !== "") {
				chatMessages.innerHTML += `<p>${message}</p>`;
				chatInput.value = "";
				chatMessages.scrollTop = chatMessages.scrollHeight;
			}
		}
	}

	function closeVisitorModal() {
		const visitorModal = document.getElementById("visitorModal");
		if (visitorModal) {
			visitorModal.style.display = "none";
		}
	}
	</script>
</body>