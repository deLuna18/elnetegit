@model IEnumerable<SubdivisionManagement.Model.Facility>

@{
    ViewData["Title"] = "Facility Reservation";
}

<head>
	<!-- BOXICONS -->
	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<!-- MY CSS -->
	<link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true">
	<link rel="stylesheet" href="~/css/facility_reservation.css" asp-append-version="true">
	<style>
	/* Pagination button styles */
	.page-btn {
		background: var(--grey);
		color: var(--dark);
		border: none;
		border-radius: 4px;
		padding: 6px 14px;
		margin: 0 2px;
		font-size: 1rem;
		cursor: pointer;
		transition: background 0.2s;
	}
	.page-btn.active, .page-btn:hover {
		background: var(--blue);
		color: var(--light);
	}
	</style>
</head>

<title>Facility Reservation</title>
<body>


	<!-- SIDEBAR -->
	<section id="sidebar">
		<a href="#" class="brand">
			<i class='bx bxs-smile'></i>
			<span class="text">Welcome</span>
		</a>
		<ul class="side-menu top">
			<li>
				<a asp-area="" asp-controller="Home" asp-action="dashboard">
					<i class='bx bxs-dashboard'></i>
					<span class="text">Dashboard</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="profile">
					<i class='bx bxs-user'></i>
					<span class="text">Profile</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="Announcements">
					<i class='bx bxs-megaphone'></i>
					<span class="text">Announcement</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="billing">
					<i class='bx bxs-credit-card-front'></i>
					<span class="text">Payment and Billing</span>
				</a>
			</li>
			<li class="active">
				<a asp-area="" asp-controller="Home" asp-action="facility_reservation">
					<i class='bx bxs-calendar'></i>
					<span class="text">Facility Reservation</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="Services">
                    <i class='bx bxs-briefcase'></i>
                    <span class="text">Services</span>
                </a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="Community_forum">
                    <i class='bx bxs-message-square-dots'></i>
                    <span class="text">Community Forum</span>
                </a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="security_visitors">
					<i class='bx bxs-shield-alt-2'></i>
					<span class="text">Security and Visitors</span>
				</a>
			</li>
			<li>
				<a asp-area="" asp-controller="Home" asp-action="contact">
					<i class='bx bx-support'></i>
					<span class="text">Contact and Support</span>
				</a>
			</li>
		</ul>
		<ul class="side-menu">
			<li>
				<a href="#">
					<i class='bx bxs-cog'></i>
					<span class="text">Settings</span>
				</a>
			</li>
			<li>
				<a asp-action="logout" class="logout">
					<i class='bx bxs-log-out-circle'></i>
					<span class="text">Logout</span>
				</a>
			</li>
		</ul>
	</section>
	<!-- SIDEBAR -->
	<!-- CONTENT -->
	<section id="content">
		<!-- NAVBAR -->
		<nav>
			<i class='bx bx-menu'></i>
			<form>
				<div class="form-input">
					<input type="search" placeholder="Search...">
					<button type="submit" class="search-btn"><i class='bx bx-search'></i></button>
				</div>
			</form>
			<input type="checkbox" id="switch-mode" hidden>
			<label for="switch-mode" class="switch-mode"></label>
			<a href="#" class="notification">
				<i class='bx bxs-bell'></i>
				<span class="num">8</span>
			</a>
			<a asp-area="" asp-controller="Home" asp-action="profile">
				<img src="~/images/profile.jpg" style="border-radius: 50%; width: 36px; height: 36px; object-fit: cover;">
			</a>
		</nav>
		<!-- NAVBAR -->
		<!-- MAIN -->
		<main>
			<div class="head-title">
				<div class="left">
					<h1>Facility Reservation</h1>
					<ul class="breadcrumb">
						<li>
							<a asp-area="" asp-controller="Home" asp-action="dashboard">Home</a>
						</li>
						<li><i class='bx bx-chevron-right'></i></li>
						<li>
							<a class="active" asp-area="" asp-controller="Home" asp-action="facility_reservation">Facility Reservation</a>
						</li>
					</ul>
				</div>
			</div>

				<!-- FACILITIES SECTION -->
				<div class="facilities-section">
					<div class="facilities-header">
						<h2>Available Facilities</h2>
					</div>
					<div class="facilities-grid">
						@foreach (var facility in Model.Where(f => f.Status.ToLower() == "available"))
						{
							<div class="facility-card" data-category="@facility.Description">
								<div class="facility-image">
									<img src="@facility.ImagePath" alt="@facility.Name">
								</div>
								<div class="facility-info">
									<h3>@facility.Name</h3>
									<p>@facility.Description</p>
									<p>Capacity: @facility.Capacity people</p>
									<div class="facility-status available">
										@facility.Status
									</div>
								</div>
								<button class="book-btn" onclick="openBookingModal('@facility.Id', '@facility.Name')">Book Now</button>
							</div>
						}
					</div>
				</div>

				<!-- HOMEOWNER RESERVATIONS TABLE -->
				<div class="facilities-section" style="margin-top: 32px;">
					<div class="facilities-header">
						<h2>Your Facility Reservations</h2>
					</div>
					<div style="overflow-x:auto;">
						<table class="reservation-table" id="homeownerReservationsTable">
							<thead>
								<tr>
									<th>Facility Name</th>
									<th>Purpose</th>
									<th>Date</th>
									<th>Start Time</th>
									<th>End Time</th>
									<th>Status</th>
									<th>Note</th>
								</tr>
							</thead>
							<tbody id="homeownerReservationsBody">
								<tr><td colspan="7" style="text-align:center;">Loading...</td></tr>
							</tbody>
						</table>
						<div id="reservationPagination" style="margin-top:16px; text-align:center;"></div>
					</div>
				</div>
			</div>
		</main>
		<!-- MAIN -->
	</section>

	<!-- MODAL FOR BOOKING -->
	<div id="bookingModal" class="modal">
		<div class="modal-content">
			<div class="modal-header">
				<h2>Book Facility</h2>
				<span class="close-btn" onclick="closeBookingModal()">&times;</span>
			</div>
			<div class="modal-body">
				<form id="bookingForm">
					@Html.AntiForgeryToken()
					<input type="hidden" id="facilityId" name="FacilityId">
					<div class="form-group">
						<label for="facilityNameDisplay">Facility Name</label>
						<input type="text" id="facilityNameDisplay" readonly>
						<input type="hidden" id="facilityName" name="FacilityName">
					</div>
					<div class="form-group">
						<label for="reservationDate">Reservation Date</label>
						<input type="date" id="reservationDate" name="ReservationDate" required>
					</div>
					<div class="form-group">
						<label for="reservationTimeStart">Start Time</label>
						<input type="time" id="reservationTimeStart" name="ReservationTimeStart" required>
					</div>
					<div class="form-group">
						<label for="reservationTimeEnd">End Time</label>
						<input type="time" id="reservationTimeEnd" name="ReservationTimeEnd" required>
					</div>
					<div class="form-group">
						<label for="purpose">Purpose</label>
						<textarea id="purpose" name="Purpose" required></textarea>
					</div>
					<div class="form-actions">
						<button type="button" class="cancel-btn" onclick="closeBookingModal()">Cancel</button>
						<button type="submit" class="submit-btn">Submit</button>
					</div>
				</form>
			</div>
		</div>
	</div>

	<script>
		// FUNCTION TO SHOW NOTIFICATION
		function showNotification(message, type = 'success') {
			const notification = document.createElement('div');
			notification.className = `message ${type}`;
			
			let icon = '';
			switch(type) {
				case 'success':
					icon = 'bx bx-check-circle';
					break;
				case 'error':
					icon = 'bx bx-x-circle';
					break;
				case 'warning':
					icon = 'bx bx-error';
					break;
				default:
					icon = 'bx bx-info-circle';
			}
			
			notification.innerHTML = `
				<i class='${icon}'></i>
				<span>${message}</span>
			`;
			
			document.body.appendChild(notification);
			
			const existingNotifications = document.querySelectorAll('.message');
			existingNotifications.forEach(notif => {
				if (notif !== notification) {
					notif.remove();
				}
			});
			
			setTimeout(() => {
				notification.style.animation = 'slideOut 0.3s ease forwards';
				setTimeout(() => {
					notification.remove();
				}, 300);
			}, 3000);
		}

	// SIDEBAR TOGGLE
	const menuBar = document.querySelector('#content nav .bx-menu');
	const sidebar = document.getElementById('sidebar');

	if (menuBar && sidebar) {
		menuBar.addEventListener('click', function () {
			sidebar.classList.toggle('hide');
		});
	}

	// SIDEBAR ACTIVE STATE
	const allSideMenu = document.querySelectorAll('#sidebar .side-menu.top li a');
	if (allSideMenu.length > 0) {
		const currentPath = window.location.pathname;
		allSideMenu.forEach(item => {
			const li = item.parentElement;
			if (item.getAttribute('href') === currentPath || 
				(currentPath.includes(item.getAttribute('href')) && item.getAttribute('href') !== '/')) {
				allSideMenu.forEach(i => {
					i.parentElement.classList.remove('active');
				});
				li.classList.add('active');
			}
		});
	}

	// DARK MODE
	const switchMode = document.getElementById('switch-mode');
	if (switchMode) {
		switchMode.addEventListener('change', function () {
			if(this.checked) {
				document.body.classList.add('dark');
			} else {
				document.body.classList.remove('dark');
			}
		});
	}

	function openBookingModal(facilityId, facilityName) {
		document.getElementById('facilityId').value = facilityId;
		document.getElementById('facilityName').value = facilityName;
		document.getElementById('facilityNameDisplay').value = facilityName;
		document.getElementById('bookingModal').style.display = 'block';
	}

	function closeBookingModal() {
		document.getElementById('bookingModal').style.display = 'none';
	}

	document.getElementById('bookingForm').addEventListener('submit', function(event) {
		event.preventDefault();

		// Get anti-forgery token
		const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

		// Collect form data
		const formData = new FormData(this);

		fetch('/Home/BookFacility', {
			method: 'POST',
			headers: {
				'RequestVerificationToken': token
			},
			body: formData
		})
		.then(response => response.json())
		.then(data => {
			if (data.success) {
				showNotification(data.message, 'success');
				closeBookingModal();
				// Add the new reservation to the table (at the top)
				const facilityName = document.getElementById('facilityName').value;
				const purpose = document.getElementById('purpose').value;
				const reservationDate = document.getElementById('reservationDate').value;
				const reservationTimeStart = document.getElementById('reservationTimeStart').value;
				const reservationTimeEnd = document.getElementById('reservationTimeEnd').value;
				// Default status is Pending, note is empty
				const newReservation = {
					facilityName,
					purpose,
					reservationDate,
					reservationTimeStart,
					reservationTimeEnd,
					status: 'Pending',
					note: ''
				};
				allReservations.unshift(newReservation);
				currentPage = 1;
				renderReservationsPage(currentPage);
			} else {
				showNotification(data.message || 'Submission failed.', 'error');
			}
		})
		.catch(error => {
			showNotification('An error occurred. Please try again.', 'error');
		});
	});

	// Pagination for Homeowner Reservations Table
	let allReservations = [];
	let currentPage = 1;
	const pageSize = 5;

	function renderReservationsPage(page) {
		const tbody = document.getElementById('homeownerReservationsBody');
		tbody.innerHTML = '';
		if (!allReservations || allReservations.length === 0) {
			tbody.innerHTML = '<tr><td colspan="7" style="text-align:center;">No reservations found.</td></tr>';
			document.getElementById('reservationPagination').innerHTML = '';
			return;
		}
		const start = (page - 1) * pageSize;
		const end = Math.min(start + pageSize, allReservations.length);
		for (let i = start; i < end; i++) {
			const r = allReservations[i];
			let statusClass = '';
			if (r.status === 'Approved') statusClass = 'status-approved';
			else if (r.status === 'Pending') statusClass = 'status-pending';
			else if (r.status === 'Disapproved') statusClass = 'status-disapproved';
			tbody.innerHTML += `
				<tr>
					<td>${r.facilityName}</td>
					<td>${r.purpose}</td>
					<td>${r.reservationDate}</td>
					<td>${r.reservationTimeStart.substring(0,5)}</td>
					<td>${r.reservationTimeEnd.substring(0,5)}</td>
					<td class="status-cell ${statusClass}">${r.status}</td>
					<td>${r.note ? r.note : ''}</td>
				</tr>
			`;
		}
		renderPaginationControls(page);
	}

	function renderPaginationControls(page) {
		const totalPages = Math.ceil(allReservations.length / pageSize);
		const container = document.getElementById('reservationPagination');
		if (totalPages <= 1) {
			container.innerHTML = '';
			return;
		}
		let html = '';
		if (page > 1) {
			html += `<button class='page-btn' onclick='goToReservationPage(${page-1})'>&laquo; Prev</button> `;
		}
		for (let i = 1; i <= totalPages; i++) {
			html += `<button class='page-btn${i === page ? ' active' : ''}' onclick='goToReservationPage(${i})'>${i}</button> `;
		}
		if (page < totalPages) {
			html += `<button class='page-btn' onclick='goToReservationPage(${page+1})'>Next &raquo;</button>`;
		}
		container.innerHTML = html;
	}

	function goToReservationPage(page) {
		currentPage = page;
		renderReservationsPage(page);
	}

	// Load Homeowner Reservations Table
	function loadHomeownerReservations() {
		fetch('/Home/GetHomeownerFacilityReservations')
			.then(res => res.json())
			.then(data => {
				allReservations = data || [];
				currentPage = 1;
				renderReservationsPage(currentPage);
			});
	}
	document.addEventListener('DOMContentLoaded', loadHomeownerReservations);
	</script>

</body>